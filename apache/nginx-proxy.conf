events {}

http {
    server {
        listen 80;
        server_name nextcloud.local;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;

        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;

        server_name nextcloud.local;

        ssl_certificate /etc/nginx/certs/nextcloud.local.crt;
        ssl_certificate_key /etc/nginx/certs/nextcloud.local.key;

        location / {
            proxy_pass http://app; # Nome do contÃªiner do aplicativo e porta
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            client_max_body_size 10G;
            proxy_request_buffering off;
        }

        location ^~ /.well-known {
        # The rules in this block are an adaptation of the rules
        # in `.htaccess` that concern `/.well-known`.
        
            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav  { return 301 /remote.php/dav/; }
        
            location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
            location /.well-known/pki-validation    { try_files $uri $uri/ =404; }
    
            location = /.well-known/webfinger { return 301 $scheme://$http_host/index.php/.well-known/webfinger; }
            location = /.well-known/nodeinfo { return 301 $scheme://$http_host/index.php/.well-known/nodeinfo; }
        
            # Let Nextcloud's API for `/.well-known` URIs handle all other
            # requests by passing them to the front-end controller.
            return 301 /index.php$request_uri;
        }


        
    }
}
